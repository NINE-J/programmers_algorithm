/*
문제 설명
정수가 있을 때, 짝수라면 반으로 나누고, 홀수라면 1을 뺀 뒤 반으로 나누면, 마지막엔 1이 됩니다. 예를 들어 10이 있다면 다음과 같은 과정으로 1이 됩니다.

10 / 2 = 5
(5 - 1) / 2 = 2
2 / 2 = 1
위와 같이 3번의 나누기 연산으로 1이 되었습니다.

정수들이 담긴 리스트 num_list가 주어질 때, num_list의 모든 원소를 1로 만들기 위해서 필요한 나누기 연산의 횟수를 return하도록 solution 함수를 완성해주세요.

제한사항
3 ≤ num_list의 길이 ≤ 15
1 ≤ num_list의 원소 ≤ 30
입출력 예
num_list	result
[12, 4, 15, 1, 14]	11
입출력 예 설명
입출력 예 #1

12는 3번, 4는 2번, 15는 3번, 1은 0번, 14는 3번의 연산이 필요하기 때문에 총 11번의 연산이 필요합니다.
*/
function solution(num_list) {
  let answer = 0

  for(let n of num_list) {
      while(n > 1) {
          if(n%2===0) n=n/2
          else n=(n-1)/2
          answer++
      }
  }

  return answer
}

//정답 후 다른 사람의 풀이
//이진수로 변환하는 과정은 숫자를 계속 2로 나누는 것과 동일한 과정을 거친다.
//예를 들어, 숫자 10의 이진수는 1010이고, 길이는 4이다. 여기서 길이에서 1을 빼면 3이 된다.
//이는 숫자 10을 2로 나눠서 1로 만들기 위해 필요한 연산의 횟수와 일치한다.
//이진수의 각 자리수는 해당 숫자를 2로 나눈 결과를 나타내며, 최상위 비트에서 최하위 비트까지 내려가는 과정은 숫자를 1로 만드는 과정과 동일하다.
//따라서, 이진수의 길이에서 1을 뺀 값은 해당 숫자를 1로 만들기 위해 필요한 나누기 연산의 횟수와 동일하다.
function solution(num_list) {
  return num_list.map(v => v.toString(2).length - 1).reduce((a, c) => a + c);
}